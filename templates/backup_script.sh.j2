#!/bin/bash

# PostgreSQL Backup Script
# Generated by Ansible

set -e

# Configuration
BACKUP_DIR="{{ backup_path }}"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="postgresql_backup_${DATE}.sql"
LOG_FILE="${BACKUP_DIR}/backup.log"

# Create backup directory if it doesn't exist
mkdir -p "${BACKUP_DIR}"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "${LOG_FILE}"
}

log_message "Starting PostgreSQL backup..."

# Perform the backup
if pg_dumpall -U {{ postgres_user }} > "${BACKUP_DIR}/${BACKUP_FILE}"; then
    log_message "Backup completed successfully: ${BACKUP_FILE}"
    
    # Compress the backup
    if gzip "${BACKUP_DIR}/${BACKUP_FILE}"; then
        log_message "Backup compressed successfully: ${BACKUP_FILE}.gz"
    else
        log_message "Warning: Failed to compress backup file"
    fi
else
    log_message "Error: Backup failed!"
    exit 1
fi

# Set proper permissions
chown postgres:postgres "${BACKUP_DIR}/${BACKUP_FILE}.gz" 2>/dev/null || true
chmod 600 "${BACKUP_DIR}/${BACKUP_FILE}.gz" 2>/dev/null || true

log_message "Backup process completed."
